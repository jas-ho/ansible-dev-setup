---
- hosts: localhost
  become: true

  vars:
    system_packages:  # todo: split into different groups
      - snapd
      - git
      - stow
      - make
      - build-essential
      - ssh
      - htop
      - net-tools
      - linux-tools-common
      - linux-tools-generic
      - glances
      - meld
      - parallel
      - nemo
      - tmux
      - fasd
      - howdoi
      - fzf
      - jq
      - micro
      - vlc
      - copyq
      - ripgrep
      - gnome-tweak-tool
      - gnome-calculator
      - gnome-shell-pomodoro
      - libreoffice
      - libreoffice-gnome
      - postgresql
      - postgresql-contrib
      - libpq-dev


    snap_packages:
      - zotero-snap
      - signal-desktop
      - dbeaver-ce

    # snap packages requiring classic confinement
    snap_packages_classic:
      - sublime-text
      - pycharm-community
      - skype
      - slack
      - spotify
      # code = visual studio code
      - code


  tasks:
    - name: "Update apt cache"
      apt:
        update_cache: true
      tags:
        - apt

    - name: "Install system packages"
      apt:
        pkg: "{{ item }}"
        state: present
      loop:  "{{ system_packages }}"
      tags:
        - apt

    - name: "Install snaps"
      snap:
        name: "{{ item }}"
        state: present
      loop: "{{ snap_packages }}"
      tags:
        - snap

    - name: "Install snaps requiring classic confinement"
      snap:
        name: "{{ item }}"
        state: present
        classic: true
      loop: "{{ snap_packages_classic }}"
      tags:
        - snap
        - now

    - name: "Install google chrome"
      apt:
        deb: https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb

    # - name: "Install fzf"
    # todo:
    # - download using equivalent to git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf, then ~/.fzf/install

    # TODO:
    # commit these changes and push

    # - name: "Install anaconda"

    # - name: "Clone and install dotfiles"

    - name: "Start ssh service to allow remote login"
      command: systemctl enable --now ssh && systemctl status ssh
      tags:
        - ssh
      # use ssh-copy-id user@remotemachine to allow passwordless login from localhost to remotemachine (https://www.linuxbabe.com/linux-server/setup-passwordless-ssh-login)
